name: ci

on:
  push:
    branches:
      - master
      - beta
  release:
    types:
      - created
  pull_request:
    branches:
      - master
      - beta

permissions:
  contents: read

jobs:
  build:
    uses: miracum/.github/.github/workflows/standard-build.yaml@4bc6073e261d8eecf88bf427ac06a4a2f0f46d2f # v1.16.12
    permissions:
      contents: write
      id-token: write
      packages: write
      pull-requests: write
      actions: read
      security-events: write
    with:
      enable-build-test-layer: false
      enable-upload-test-image: false
      platforms: |
        linux/amd64
        linux/arm64
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  test:
    needs:
      - build
    runs-on: ubuntu-24.04
    steps:
      # <https://docs.docker.com/storage/containerd/>
      # via <https://github.com/docker/setup-buildx-action/issues/257>
      - name: Set up containerd image store
        shell: bash
        run: |
          [ -f /etc/docker/daemon.json ] || echo "{}" | sudo tee /etc/docker/daemon.json
          jq '. | .+{"features": {"containerd-snapshotter": true}}' /etc/docker/daemon.json > /tmp/docker-daemon-with-containerd.json
          sudo mv /tmp/docker-daemon-with-containerd.json /etc/docker/daemon.json
          cat /etc/docker/daemon.json
          sudo systemctl restart docker

          docker info -f '{{ .DriverStatus }}'

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Download container image
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: ${{ needs.build.outputs.image-slug }}
          path: /tmp

      - name: Load image
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          ls -lar /tmp
          docker load --input /tmp/image.tar
          docker image ls -a

      - name: Start compose fixtures
        run: |
          docker compose up wait-for-pathling

      - name: Install .NET
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
        with:
          dotnet-version: "9.0.x"

      - name: Run tests
        env:
          PATHLING_S3_IMPORT_IMAGE_TAG: ${{ needs.build.outputs.image-version }}
        run: dotnet test src/PathlingS3Import.Tests.E2E --configuration=Release -l "console;verbosity=detailed"

      - name: Print compose logs
        if: always()
        run: |
          docker compose logs
          docker compose down --volumes --remove-orphans

  lint:
    uses: miracum/.github/.github/workflows/standard-lint.yaml@4bc6073e261d8eecf88bf427ac06a4a2f0f46d2f # v1.16.12
    permissions:
      contents: read
      pull-requests: write
      issues: write
      security-events: write
      actions: read
    with:
      enable-validate-gradle-wrapper: false
      codeql-languages: '["csharp"]'
      enable-codeql: true
      enable-verify-base-image-signature: false
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  release:
    uses: miracum/.github/.github/workflows/standard-release.yaml@4bc6073e261d8eecf88bf427ac06a4a2f0f46d2f # v1.16.12
    needs:
      - build
    permissions:
      contents: write
      pull-requests: write
      issues: write
    secrets:
      semantic-release-token: ${{ secrets.MIRACUM_BOT_SEMANTIC_RELEASE_TOKEN }}
