services:
  minio:
    image: docker.io/bitnami/minio:2024.2.17-debian-12-r2@sha256:4d04a41f9d385d51ecd9be8dafca13fe9d56be2cc1c5ea8f98e6cfb235d87ae5
    environment:
      MINIO_ROOT_USER: "admin"
      # kics-scan ignore-line
      MINIO_ROOT_PASSWORD: "miniopass" # gitleaks:allow
      MINIO_DEFAULT_BUCKETS: "fhir"
    ports:
      - "9000:9000"
      - "127.0.0.1:9001:9001"

  wait-for-minio:
    image: docker.io/curlimages/curl:8.6.0@sha256:c3b8bee303c6c6beed656cfc921218c529d65aa61114eb9e27c62047a1271b9b
    restart: "no"
    environment:
      MINIO_ENDPOINT_URL: http://minio:9000
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        until [ "$(curl -s -o /dev/null -L -w "%{http_code}" "$$MINIO_ENDPOINT_URL/minio/health/live")" == "200" ]; do
            echo "$(date): Waiting for minio server @ $$MINIO_ENDPOINT_URL to be up";
            sleep 5;
        done;
    depends_on:
      minio:
        condition: service_started

  minio-client:
    image: docker.io/bitnami/minio-client:2024.2.16-debian-12-r2@sha256:ccef919b89fcf8f429a2e61c30c68ce1f091184e6d43545164667d340dd3a6fb
    environment:
      MINIO_SERVER_ACCESS_KEY: admin
      # kics-scan ignore-line
      MINIO_SERVER_SECRET_KEY: miniopass # gitleaks:allow
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        mc alias set minio http://minio:9000 $${MINIO_SERVER_ACCESS_KEY} $${MINIO_SERVER_SECRET_KEY}
        mc mb minio/fhir
        mc cp /tmp/data/bundle-*.ndjson minio/fhir/staging/Patient/
        mc cp /tmp/data/bundle-*.ndjson /tmp/data/pathling-s3-importer-last-imported.txt minio/fhir/staging-with-checkpoint/Patient/
    depends_on:
      wait-for-minio:
        condition: service_completed_successfully
    volumes:
      - $PWD/hack/data/:/tmp/data/:ro

  pathling:
    image: docker.io/aehrc/pathling:6.4.2@sha256:9b8ee32d4b8bb40192d6bf25814492a616153a0df15d178c286db9ec80c1c85e
    environment:
      pathling.storage.warehouseUrl: s3://fhir
      pathling.import.allowableSources: s3://fhir/staging
      pathling.terminology.enabled: false
      pathling.terminology.serverUrl: http://localhost:8080/i-dont-exist
      fs.s3a.endpoint: "http://minio:9000"
      fs.s3a.aws.credentials.provider: "org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider"
      fs.s3a.access.key: "admin"
      fs.s3a.secret.key: "miniopass"
      fs.s3a.impl: "org.apache.hadoop.fs.s3a.S3AFileSystem"
      fs.s3a.path.style.access: "true"
    ports:
      - "8082:8080"
    depends_on:
      minio-client:
        condition: service_completed_successfully

  wait-for-pathling:
    image: docker.io/curlimages/curl:8.6.0@sha256:c3b8bee303c6c6beed656cfc921218c529d65aa61114eb9e27c62047a1271b9b
    restart: "no"
    environment:
      PATHLING_URL: http://pathling:8080
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        until [ "$(curl -s -o /dev/null -L -w "%{http_code}" "$$PATHLING_URL/fhir/metadata")" == "200" ]; do
            echo "$(date): Waiting for pathling server @ $$PATHLING_URL to be up";
            sleep 5;
        done;
    depends_on:
      pathling:
        condition: service_started
