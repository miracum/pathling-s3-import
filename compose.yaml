services:
  minio:
    image: docker.io/bitnami/minio:2024.8.29-debian-12-r2@sha256:3f2397fca8d1944683d06a78e13967bc92101a0c8ef696a42b177c3184b63516
    environment:
      MINIO_ROOT_USER: "admin"
      # kics-scan ignore-line
      MINIO_ROOT_PASSWORD: "miniopass" # gitleaks:allow
      MINIO_DEFAULT_BUCKETS: "fhir"
    ports:
      # both this and the pathling port need to be exposed on host.docker.internal
      # for the e2e tests to work.
      - "9000:9000"
      - "127.0.0.1:9001:9001"

  wait-for-minio:
    image: docker.io/curlimages/curl:8.9.1@sha256:8addc281f0ea517409209f76832b6ddc2cabc3264feb1ebbec2a2521ffad24e4
    restart: "no"
    environment:
      MINIO_ENDPOINT_URL: http://minio:9000
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        until [ "$(curl -s -o /dev/null -L -w "%{http_code}" "$$MINIO_ENDPOINT_URL/minio/health/live")" == "200" ]; do
            echo "$(date): Waiting for minio server @ $$MINIO_ENDPOINT_URL to be up";
            sleep 5;
        done;
    depends_on:
      minio:
        condition: service_started

  minio-client:
    image: docker.io/bitnami/minio-client:2024.8.26-debian-12-r2@sha256:7b91be4651d5cfc9146ba8f104bf67cc809c37e6d39653d959f28a2ce01ac7ca
    environment:
      MINIO_SERVER_ACCESS_KEY: admin
      # kics-scan ignore-line
      MINIO_SERVER_SECRET_KEY: miniopass # gitleaks:allow
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        mc alias set minio http://minio:9000 $${MINIO_SERVER_ACCESS_KEY} $${MINIO_SERVER_SECRET_KEY}
        mc mb minio/fhir
        mc cp /tmp/data/bundle-*.ndjson minio/fhir/staging/Patient/
        mc cp /tmp/data/bundle-*.ndjson /tmp/data/_last-import-checkpoint.json minio/fhir/staging-with-checkpoint/Patient/
    depends_on:
      wait-for-minio:
        condition: service_completed_successfully
    volumes:
      - $PWD/hack/data/:/tmp/data/:ro

  pathling:
    image: docker.io/aehrc/pathling:7.0.1@sha256:70177a4eb7a20a5edba7a4957ac6cd245c29e3c306e98c5de59fe2974c1f71b8
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    privileged: false
    environment:
      JAVA_TOOL_OPTIONS: |
        -Xmx18g
        -Xss64m
        -Duser.timezone=UTC
        --add-exports=java.base/sun.nio.ch=ALL-UNNAMED
        --add-opens=java.base/java.net=ALL-UNNAMED
        --add-opens=java.base/java.nio=ALL-UNNAMED
        --add-opens=java.base/java.util=ALL-UNNAMED
        --add-opens=java.base/java.lang.invoke=ALL-UNNAMED
      pathling.storage.warehouseUrl: s3a://fhir
      pathling.import.allowableSources: s3a://fhir/staging
      pathling.terminology.enabled: false
      pathling.terminology.serverUrl: http://localhost:8080/i-dont-exist
      fs.s3a.endpoint: "http://minio:9000"
      fs.s3a.access.key: "admin"
      fs.s3a.secret.key: "miniopass"
      fs.s3a.impl: "org.apache.hadoop.fs.s3a.S3AFileSystem"
      fs.s3a.path.style.access: "true"
      spark.sql.parquet.compression.codec: "zstd"
      spark.io.compression.codec: "zstd"
      parquet.compression.codec.zstd.level: "9"
      spark.serializer: "org.apache.spark.serializer.KryoSerializer"
      spark.master: "local[4]"
      spark.executor.memory: 4g
      spark.driver.memory: 4g
    ports:
      - "8082:8080"
    depends_on:
      minio-client:
        condition: service_completed_successfully

  wait-for-pathling:
    image: docker.io/curlimages/curl:8.9.1@sha256:8addc281f0ea517409209f76832b6ddc2cabc3264feb1ebbec2a2521ffad24e4
    restart: "no"
    environment:
      PATHLING_URL: http://pathling:8080
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        until [ "$(curl -s -o /dev/null -L -w "%{http_code}" "$$PATHLING_URL/fhir/metadata")" == "200" ]; do
            echo "$(date): Waiting for pathling server @ $$PATHLING_URL to be up";
            sleep 5;
        done;
    depends_on:
      pathling:
        condition: service_started

  pushgateway:
    image: docker.io/prom/pushgateway:v1.9.0@sha256:98a458415f8f5afcfd45622d289a0aa67063563bec0f90d598ebc76783571936
    ports:
      - "127.0.0.1:9091:9091"
